Given a N x M grid. Find All possible paths from top left to bottom right.From each cell you can either move only to right or down.

Example 1:

Input: 1 2 3
       4 5 6
Output: 1 4 5 6
        1 2 5 6 
        1 2 3 6
Explanation: We can see that there are 3 
paths from the cell (0,0) to (1,2).
Example 2:

Input: 1 2
       3 4
Output: 1 2 4
        1 3 4


Code:

class Solution
{
public:
  
    vector<vector<int> > ans;
    
    void Path(int i, int j, int n, int m, vector<int> temp, vector<vector<int>> &grid)
    {
        if(i > n-1 || j > m-1)  return;
        
        temp.push_back(grid[i][j]);
        
        if(i == n-1 && j == m-1)    ans.push_back(temp);
        
        Path(i+1,j,n,m,temp,grid);
        
        Path(i,j+1,n,m,temp,grid);
        
        temp.pop_back();
    }

    vector<vector<int>> findAllPossiblePaths(int n, int m, vector<vector<int>> &grid)
    {
        int i = 0 , j = 0;
        vector<int> temp;
        Path(i,j,n,m,temp,grid);
        
        return ans;
    }
};